-- CREATE MAIN TABLE

CREATE OR REPLACE TABLE default.db_football_player
(
    `player_name` String,
    `position` String,
    `club_name` String,
    `country_name` String,
    `age` UInt32,
    `market_value` Float32,
    `insert_time_clickhouse` SimpleAggregateFunction(max, Datetime('Asia/Jakarta')) DEFAULT NOW()
)
ENGINE = MergeTree()
PARTITION BY club_name
ORDER BY market_value
SETTINGS index_granularity = 8192;

-- CREATE TABLE TO GET DATA FROM KAFKA TOPIC

CREATE TABLE default.db_football_player_queue
(
    `player_name` String,
    `position` String,
    `club_name` String,
    `country_name` String,
    `age` UInt32,
    `market_value` Float32,
)
ENGINE = Kafka
SETTINGS kafka_broker_list = 'kafka-kafka-1:9092',
 kafka_topic_list = 'etl.public.db_football_player',
 kafka_group_name = 'clickhouse-consumer-2',
 kafka_format = 'JSONEachRow';

 -- CREATE MV TO QUERY DATA FROM db_football_player_queue_mv TO db_football_player

CREATE MATERIALIZED VIEW default.db_football_player_queue_mv TO default.db_football_player
AS 
SELECT
    player_name,
    position,
    club_name,
    country_name,
    age,
    market_value
FROM default.db_football_player_queue;

-- CREATE VIEW FOR STREAMLIT DASHBOARD

CREATE VIEW db_football_player_view 
AS
SELECT 
	player_name,
    position,
    club_name,
    country_name,
    age,
    market_value,
	toDateTime64(insert_time_clickhouse, 3, 'Asia/Jakarta') as insert_time_clickhouse,
	toDateTime64(now(), 3 , 'Asia/Jakarta') as source_collected
FROM `default`.db_football_player;

-- DELETE TABLE

DROP TABLE `default`.db_football_player ;
DROP TABLE `default`.db_football_player_queue ;
DROP TABLE `default`.db_football_player_queue_mv ;
DROP TABLE `default`.db_football_player_view ;

